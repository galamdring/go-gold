// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AccountsColumns holds the columns for the "accounts" table.
	AccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"checking", "savings", "credit_card", "installment_loan"}},
		{Name: "budget_accounts", Type: field.TypeInt, Nullable: true},
	}
	// AccountsTable holds the schema information for the "accounts" table.
	AccountsTable = &schema.Table{
		Name:       "accounts",
		Columns:    AccountsColumns,
		PrimaryKey: []*schema.Column{AccountsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "accounts_budgets_accounts",
				Columns:    []*schema.Column{AccountsColumns[3]},
				RefColumns: []*schema.Column{BudgetsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// BudgetsColumns holds the columns for the "budgets" table.
	BudgetsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "amount", Type: field.TypeOther, SchemaType: map[string]string{"postgres": "numeric", "sqlite3": "TEXT"}},
		{Name: "user_budgets", Type: field.TypeInt, Nullable: true},
	}
	// BudgetsTable holds the schema information for the "budgets" table.
	BudgetsTable = &schema.Table{
		Name:       "budgets",
		Columns:    BudgetsColumns,
		PrimaryKey: []*schema.Column{BudgetsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "budgets_users_budgets",
				Columns:    []*schema.Column{BudgetsColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:       "categories",
		Columns:    CategoriesColumns,
		PrimaryKey: []*schema.Column{CategoriesColumns[0]},
	}
	// TransactionsColumns holds the columns for the "transactions" table.
	TransactionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "amount", Type: field.TypeOther, SchemaType: map[string]string{"postgres": "numeric", "sqlite3": "TEXT"}},
		{Name: "note", Type: field.TypeString},
		{Name: "cleared", Type: field.TypeBool},
		{Name: "account_transactions", Type: field.TypeInt, Nullable: true},
		{Name: "budget_transactions", Type: field.TypeInt, Nullable: true},
	}
	// TransactionsTable holds the schema information for the "transactions" table.
	TransactionsTable = &schema.Table{
		Name:       "transactions",
		Columns:    TransactionsColumns,
		PrimaryKey: []*schema.Column{TransactionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "transactions_accounts_transactions",
				Columns:    []*schema.Column{TransactionsColumns[4]},
				RefColumns: []*schema.Column{AccountsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "transactions_budgets_transactions",
				Columns:    []*schema.Column{TransactionsColumns[5]},
				RefColumns: []*schema.Column{BudgetsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AccountsTable,
		BudgetsTable,
		CategoriesTable,
		TransactionsTable,
		UsersTable,
	}
)

func init() {
	AccountsTable.ForeignKeys[0].RefTable = BudgetsTable
	BudgetsTable.ForeignKeys[0].RefTable = UsersTable
	TransactionsTable.ForeignKeys[0].RefTable = AccountsTable
	TransactionsTable.ForeignKeys[1].RefTable = BudgetsTable
}
